# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Wallet API CI/CD Pipeline

on:
  push:
    branches:
      - master

env: 
  project-directory: ./

jobs:
  build:
    name: Build Server Project
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name == 'push' &&
      github.repository == 'Greenstand/treetracker-wallet-api'
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: npm clean install
      run: npm ci
      working-directory: ${{ env.project-directory }}
      #    - name: run ESLint
      # run: npm run lint
      #working-directory: ${{ env.project-directory }}
      #- name: build server project
      #run: npm run build
      #working-directory: ${{ env.project-directory }}
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: ./
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set git sha
      id: git-sha
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Build snapshot with git sha and push on merge
      id: docker_build_snapshot_merge
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: greenstand/treetracker-wallet-api:${{ steps.package-version.outputs.current-version }}-${{ steps.git-sha.outputs.sha_short }}
    - name: Build snapshot and push on merge
      id: docker_build_merge
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: greenstand/treetracker-wallet-api:latest

  release:
    name: Release semantic version
    needs: build
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name == 'push' &&
      github.repository == 'Greenstand/treetracker-wallet-api'
    steps:
      # check out repository code and setup node
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      # install dependencies and run semantic-release
      - run: npm i -g semantic-release @semantic-release/{git,exec,changelog}
      - run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy latest to development environment
    runs-on: ubuntu-latest
    needs: release
    if: |
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name == 'push' &&
      github.repository == 'Greenstand/treetracker-wallet-api'
    steps:
    - uses: actions/checkout@v2
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: ./
    - name: Set git sha
      id: git-sha
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Install kustomize
      run: curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - name: Copy kustomize.yml
      run: cp deployment/kustomize/kustomization.yaml deployment/kustomization.yaml
    - name: Run kustomize
      run: (cd deployment && ../kustomize edit set image greenstand/treetracker-wallet-api:${{ steps.package-version.outputs.current-version }}-${{ steps.git-sha.outputs.sha_short }} )
    - name: Install doctl for kubernetes
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_NAME }}
    - name: Update kubernetes resources
      run: kubectl -n wallet-api apply --wait -k ./deployment/
